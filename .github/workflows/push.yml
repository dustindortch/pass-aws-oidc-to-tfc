---
name: Push
on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  TF_CLOUD_ORGANIZATION: ${{ vars.TF_CLOUD_ORGANIZATION}}
  TF_HOSTNAME: app.terraform.io
  TF_PROJECT: PACCAR Test
  TFC_AGENT_TOKEN: ${{ secrets.TFC_AGENT_TOKEN }}
  TFC_AGENT_NAME: ${{ secrets.TFC_AGENT_NAME }}

jobs:
  retrieve-token:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Get Token
        id: get-token
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          output-credentials: true
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}

      # - name: Get Workspace ID
      #   id: get-workspace-id
      #   uses: dustindortch/actions-tfe-get-workspace-id@v0.1.5
      #   with:
      #     organization: ${{ env.TF_CLOUD_ORGANIZATION }}
      #     token: ${{ env.TF_API_TOKEN}}
      #     workspace: ${{ vars.TF_WORKSPACE }}

      # - name: Set AWS_ACCESS_KEY_ID
      #   id: set-aws-acccess-key-id
      #   uses: dustindortch/actions-tfe-set-variable@v0.1.8
      #   with:
      #     organization: ${{ env.TF_CLOUD_ORGANIZATION }}
      #     token: ${{ env.TF_API_TOKEN}}
      #     workspace_id: ${{ steps.get-workspace-id.outputs.workspace_id }}
      #     name: AWS_ACCESS_KEY_ID
      #     value: ${{ steps.get-token.outputs.aws-access-key-id }}
      #     category: env

      # - name: Set AWS_SECRET_ACCESS_KEY
      #   id: set-aws-secret-access-key
      #   uses: dustindortch/actions-tfe-set-variable@v0.1.8
      #   with:
      #     organization: ${{ env.TF_CLOUD_ORGANIZATION }}
      #     token: ${{ env.TF_API_TOKEN}}
      #     workspace_id: ${{ steps.get-workspace-id.outputs.workspace_id }}
      #     name: AWS_SECRET_ACCESS_KEY
      #     value: ${{ steps.get-token.outputs.aws-secret-access-key }}
      #     sensitive: true
      #     category: env

      # - name: Set AWS_SESSION_TOKEN
      #   id: set-aws-session-token
      #   uses: dustindortch/actions-tfe-set-variable@v0.1.8
      #   with:
      #     organization: ${{ env.TF_CLOUD_ORGANIZATION }}
      #     token: ${{ env.TF_API_TOKEN}}
      #     workspace_id: ${{ steps.get-workspace-id.outputs.workspace_id }}
      #     name: AWS_SESSION_TOKEN
      #     value: ${{ steps.get-token.outputs.aws-session-token }}
      #     sensitive: true
      #     category: env

      # - name: Set TFC_AWS_PROVIDER_AUTH
      #   id: set-aws-provider-auth
      #   uses: dustindortch/actions-tfe-set-variable@v0.1.8
      #   with:
      #     organization: ${{ env.TF_CLOUD_ORGANIZATION }}
      #     token: ${{ env.TF_API_TOKEN}}
      #     workspace_id: ${{ steps.get-workspace-id.outputs.workspace_id }}
      #     name: TFC_AWS_PROVIDER_AUTH
      #     value: true
      #     category: env

      # - name: Set TFC_AWS_RUN_ROLE_ARN
      #   id: set-aws-run-role-arn
      #   uses: dustindortch/actions-tfe-set-variable@v0.1.8
      #   with:
      #     organization: ${{ env.TF_CLOUD_ORGANIZATION }}
      #     token: ${{ env.TF_API_TOKEN}}
      #     workspace_id: ${{ steps.get-workspace-id.outputs.workspace_id }}
      #     name: TFC_AWS_RUN_ROLE_ARN
      #     value: ${{ vars.AWS_ROLE_ARN }}
      #     category: env

      - name: Install Terraform Cloud Run Agent
        id: agent
        shell: bash
        run: |
          wget https://releases.hashicorp.com/tfc-agent/1.15.1/tfc-agent_1.15.1_linux_amd64.zip
          unzip tfc-agent_1.15.1_linux_amd64.zip
          ./tfc-agent -single &
          

      - name: Terraform Cloud Run
        id: plan
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.3.0
        with:
          message: "Run from GitHub Actions"
          workspace: ${{ vars.TF_WORKSPACE }}
...