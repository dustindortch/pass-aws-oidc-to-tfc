---
name: Push
on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  TF_CLOUD_ORGANIZATION: ${{ vars.TF_CLOUD_ORGANIZATION}}
  TF_HOSTNAME: app.terraform.io
  TF_PROJECT: PACCAR Test

jobs:
  retrieve-token:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2

      - name: Get Token
        id: get-token
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          output-credentials: true
          role-to-assume: arn:aws:iam::853670174897:role/github-actions-to-tfc

      - name: Set Environment Variables
        id: set-env-vars
        shell: bash
        run: |
          WORKSPACE_ID=$(curl -X GET https://app.terraform.io/api/v2/organizations/${{ vars.TF_CLOUD_ORGANIZATION }}/workspaces/${{ vars.TF_WORKSPACE }} -H 'Content-Type: application/vnd.api+json' -H "Authorization: Bearer ${{ secrets.TF_API_TOKEN }}" -d '{"data": [{"type": "tags","attributes": {"name": "'"${{ env.TF_PROJECT }}"'"}}]}' | jq '.data.id' -r)
          echo $WORKSPACE_ID
          curl -X PATCH https://app.terraform.io/api/v2/workspaces/${WORKSPACE_ID}/vars -H 'Content-Type: application/vnd.api+json' -H "Authorization: Bearer ${{ secrets.TF_API_TOKEN }}" -d '{"type": "vars","data": {"attributes": {"key": "AWS_ACCESS_KEY_ID","value": "${{ steps.get-token.outputs.aws-access-key-id }}","category": "env"}}}'

      # - name: Terraform Cloud Run
      #   id: plan
      #   uses: hashicorp/tfc-workflows-github/actions/create-run@v1.3.0
      #   with:
      #     message: "Run from GitHub Actions"
      #     workspace: ${{ vars.TF_WORKSPACE }}
...